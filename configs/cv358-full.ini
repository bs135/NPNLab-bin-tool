# 
# LeEco X3-55pro (Super3 x55 Pro) packer configuration file
# The TV is based on mst6a928 cpu
# 

[Main]

# Output file name
FirmwareFileName=CtvUpgrade.bin

# Folder which contains images to pack
ProjectFolder=./unpacked

# Use hex values in "mmc write.p" directive. 
# Check your unpacked ~header_script file for the "mmc write.p" paramers.
# Set it to True, if the paramers have "0x" prefix.
# All newest Mstar firwares uses hex values
useHexValuesPrefix=True

# Firmware file name to use in "filepartload" directive. 
# All newest Mstar firwares uses $(UpgradeImage) Otherwise it should be equal FirmwareFileName value.
#SCRIPT_FIRMWARE_FILE_NAME=${FirmwareFileName}
SCRIPT_FIRMWARE_FILE_NAME=$$(UpgradeImage)

# DRAM_BUF_ADDR value
DRAM_BUF_ADDR=30200000

# Magic footer value. It's reserved for future use, usually it's "12345678" string
MAGIC_FOOTER=12345678

# Header size is always 16KB
HEADER_SIZE=16KB

[HeaderScript]

# Custom header script directives at the beginning of the script
Prefix:
	mmc slc 0 1
	mmc rmgpt

# Custom directives at the end of the script
Suffix:
	setenv recoverycmd mmc read.p 0x23000000 dtb 0x00100000\; mmc read.p 0x24D00000 recovery 0x02000000\; bootm 0x24D00000
	saveenv
	setenv bootcmd mmc read.p 0x23000000 dtb 0x00100000\; mmc read.p 0x24D00000 boot 0x01400000\; bootm 0x24D00000
	saveenv
	setenv bootargs console
	saveenv
	setenv bootargs console=ttyS0,115200 androidboot.console=ttyS0 root=/dev/ram rw rootwait init=/init CORE_DUMP_PATH=/data/core_dump.%%p.gz KDebug=1 delaylogo=true androidboot.selinux=permissive security=selinux platform=sn SD_CONFIG=3 tee_mode=optee str_ignore_wakelock pm_path=/tvconfig/config/PM.bin loglevel=0
	setenv bootlogo_gopidx 2
	setenv bootlogo_buffer E_MMAP_ID_BOOTLOGO_BUFFER
	setenv OSD_BufferAddr E_MMAP_ID_JPD_WRITE_ADR
	setenv str_crc 2
	setenv db_table 0
	setenv verify n
	setenv sync_mmap 1
	setenv CONFIG_PATH /tvconfig/config
	setenv mboot_default_env 0
	setenv first_upgrade_factory 0
	setenv music 0
	setenv WDT_ENABLE 1
	setenv ctv_aptoide_control 1
	setenv music_vol 35
	setenv BootVideoPlayBySrv 1
	setenv BootVideoPlaySourceConfig file:///system/bootvideo.mp4?looptime=1&playtime=10
	saveenv
	setenv CtvUpgrade_complete 1
	setenv u16CurPWMvalue 0
	setenv sync_mmap 1
	setenv db_table 0
	setenv first_setup
	saveenv
	printenv

# List of partitions to pack
#	[partition_name] - Name of partition. Shold begin with "part/"
#	create - flag to generate "mmc create" directive. It requires "size" parameter
#	size - Required parameter, if create flag sets to True. Partition size to create [hex]
#	erase - flag to generate "mmc erase.p" directive.
#	imageFile - Path to image file to pack
#	type - partition type:
#		partitionImage - Plain partition image. It generates "filepartload" and "mmc write.p" directives
#	 	secureInfo - signature file. Uses "store_secure_info" directive
#	 	nuttxConfig - Nuttx config file. Uses "store_nuttx_config" directive
#	lzo - pack partition/chunk to lzo. Uses "mmc unlzo" directive
#	chunkSize - chunk size to split partition. A single chunk uses, if chunkSize is not set. Units: B, KB, MB, GB

[part/misc]
create=True
size=00080000
erase=True

[part/factory]
create=True
size=6400000
erase=True
imageFile=${Main:ProjectFolder}/factory.img
type=partitionImage

[part/sboot]
imageFile=${Main:ProjectFolder}/sboot.img
type=sboot
emptySkip=False

[part/MBOOT]
imageFile=${Main:ProjectFolder}/MBOOT.img
type=partitionImage
emptySkip=False

[part/recovery]
create=True
size=02000000
erase=True
imageFile=${Main:ProjectFolder}/recovery.img
type=partitionImage

[part/boot]
create=True
size=01400000
erase=True
imageFile=${Main:ProjectFolder}/boot.img
type=partitionImage

[part/optee]
create=True
size=00600000
erase=True
imageFile=${Main:ProjectFolder}/optee.img
type=partitionImage
emptySkip=False

[part/armfw]
create=True
size=00010000
erase=True
imageFile=${Main:ProjectFolder}/armfw.img
type=partitionImage
emptySkip=False

[part/RTPM]
create=True
size=00040000
erase=True
imageFile=${Main:ProjectFolder}/RTPM.img
type=partitionImage

[part/dtb]
create=True
size=00100000
erase=True
imageFile=${Main:ProjectFolder}/dtb.img
type=partitionImage

[part/tvservice]
create=True
size=0C000000
erase=True
imageFile=${Main:ProjectFolder}/tvservice.img
type=partitionImage

[part/tvconfig]
create=True
size=01800000
erase=True
imageFile=${Main:ProjectFolder}/tvconfig.img
type=partitionImage

[part/tvdatabase]
create=True
size=01000000
erase=True
imageFile=${Main:ProjectFolder}/tvdatabase.img
type=partitionImage

[part/tvcustomer]
create=True
size=01800000
erase=True
imageFile=${Main:ProjectFolder}/tvcustomer.img
type=partitionImage

[part/tvcertificate]
create=True
size=00800000
erase=True
imageFile=${Main:ProjectFolder}/tvcertificate.img
type=partitionImage

[part/system]
create=True
size=32000000
erase=True
imageFile=${Main:ProjectFolder}/system.simg
type=partitionImage
simg=True
chunkSize=150MB

[part/cache]
create=True
size=40000000
erase=True
imageFile=${Main:ProjectFolder}/cache1.simg
type=partitionImage
simg=True

[part/vendor]
create=True
size=20C00000
erase=True
imageFile=${Main:ProjectFolder}/vendor.simg
type=partitionImage
simg=True
chunkSize=150MB

[part/userdata]
create=True
size=3700000
erase=True
imageFile=${Main:ProjectFolder}/userdata1.simg
type=partitionImage
simg=true

